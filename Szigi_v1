{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[] betu\n",
      ".\n",
      "jelköz\n",
      ".\n",
      "jelköz\n",
      ".\n",
      "[[], ['.', '.', '.']] szó\n",
      ".\n",
      "jelköz\n",
      ".\n",
      "jelköz\n",
      ".\n",
      "break\n",
      "[['.', '.', '.']] szó\n"
     ]
    }
   ],
   "source": [
    "import cv2\n",
    "import numpy as np\n",
    "# nincs benne az alap anacondában lehet instalálni kell\n",
    "import keyboard\n",
    "from time import time\n",
    "\n",
    "#üres listák tároláshoz\n",
    "karakterek=[]\n",
    "betuk=[]\n",
    "szavak=[]\n",
    "mondatok=[]\n",
    "\n",
    "#fekete fejérképek\n",
    "img=np.zeros(300*300)\n",
    "img=img.reshape(300,300)\n",
    "img2=np.ones(300*300)\n",
    "img2=img2.reshape(300,300)\n",
    "\n",
    "\n",
    "#ezzel tudok majd kilépni\n",
    "k=0\n",
    "\n",
    "\n",
    "while(1):\n",
    "    \n",
    "    if (keyboard.is_pressed(' ')):\n",
    "        #megnézem mennyi az idő amikor a fehér kezdődik\n",
    "        start=time()\n",
    "        while(keyboard.is_pressed(' ')): # amíg space van fehér\n",
    "            #fehér kép\n",
    "            cv2.imshow('img',img2)\n",
    "            k=cv2.waitKey(1)\n",
    "        # vége a while nak tehát itt már nem fehér a kép megnézem mennyi azidő\n",
    "        end=time()\n",
    "        #eltelt idő különbséggel\n",
    "        feher_ido=end-start\n",
    "        \n",
    "        #ha 1 mp nél rövidebb akkor . egyébként - \n",
    "        if(feher_ido>1):\n",
    "            karakterek.append('-')\n",
    "            print('-')\n",
    "        else:\n",
    "            karakterek.append('.')\n",
    "            print('.')\n",
    "    # Ha nincs megnyomva a space\n",
    "    else:\n",
    "        start_fekete=time()\n",
    "        while(not keyboard.is_pressed(' ')): #amíg nincs space\n",
    "            cv2.imshow('img',img)\n",
    "            k=cv2.waitKey(10)\n",
    "            # Esc-re leáll a program \n",
    "            if k==27:\n",
    "                print('break')\n",
    "                break\n",
    "        #itt van spaceígy a fekete idő véget ér\n",
    "        end_fekete=time()\n",
    "        #meddig volt fekete\n",
    "        fekete_ido=end_fekete-start_fekete\n",
    "        \n",
    "        # ha csak egy fekete villanás azt figyelmn kívül hagyja\n",
    "        if (fekete_ido==0):\n",
    "            continue\n",
    "        #  rövid szünet 0mp < szünet < 1mp\n",
    "        elif (fekete_ido <1):\n",
    "            print('jelköz')\n",
    "        #hosszú szünet 1mp < szünet <3 mp\n",
    "        elif  (fekete_ido<3):\n",
    "            #az eddigi karaktereket beteszi egy betübe\n",
    "            betuk.append(karakterek)\n",
    "            # itt kell majd fordítani\n",
    "            #betuk[-1]=fordito_függvény(karakterek)\n",
    "            print(karakterek,'betu')\n",
    "            #üreskaraktereklista az új betünek\n",
    "            karakterek=[]\n",
    "        # 3mp < szünet <5 mp\n",
    "        elif (fekete_ido<5):\n",
    "            \n",
    "            #ugyan azmint a 3mps szünetnél csak a betüketbeteszi eg szóba\n",
    "            #itt is le kell zárni az utolsó betűt\n",
    "            \n",
    "            betuk.append(karakterek)\n",
    "            # itt kell majd fordítani\n",
    "            #betuk[-1]=fordito_függvény(karakterek)\n",
    "            szavak.append(betuk)\n",
    "            print(betuk,'szó')\n",
    "            \n",
    "            #új betü Új szó\n",
    "            betuk=[]\n",
    "            karakterek=[]\n",
    "            \n",
    "            \n",
    "            \n",
    "            \n",
    "        # 5mp < szünet\n",
    "        else:\n",
    "            \n",
    "            #ugyan az mint a szavaknál\n",
    "            \n",
    "            betuk.append(karakterek)\n",
    "            \n",
    "            # itt kell majd fordítani\n",
    "            #betuk[-1]=fordito_függvény(karakterek)\n",
    "            \n",
    "            szavak.append(betuk)\n",
    "            mondatok.append(szavak)\n",
    "            print(szavak,'mondat')\n",
    "            szavak=[]\n",
    "            betuk=[]\n",
    "            karakterek=[]\n",
    "            \n",
    "            \n",
    "            \n",
    "        #ez az Esc re breakelés folytatása tt léepk ki a második ciklusbóé\n",
    "        #azértkell az elifek után hogy az utolsó betu/szó/mondatis hozzá legyen fűzve a listához\n",
    "        if k==27:\n",
    "            break\n",
    "            \n",
    "#villogó ablaklezárása:\n",
    "cv2.destroyAllWindows()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "    "
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
